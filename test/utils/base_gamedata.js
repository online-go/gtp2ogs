function base_gamedata(overrides) {
    let base = {
        game_id: 1,
        game_name: 'Friendly Match',
        phase: 'play',
        komi: 7.5,
        handicap: 0,
        width: 19,
        height: 19,
        private: false,
        ranked: false,
        rules: 'chinese',
        time_control: {
            system: 'fischer',
            pause_on_weekends: false,
            time_control: 'fischer',
            initial_time: 120,
            max_time: 300,
            time_increment: 30,
            speed: 'live',
        },
        start_time: 0,
        clock: {
            game_id: 1,
            current_player: 1,
            black_player_id: 1,
            white_player_id: 2,
            title: 'Friendly Match',
            last_move: 0,
            expiration: 0, // TODO
            black_time: { thinking_time: 30, skip_bonus: false },
            white_time: { thinking_time: 30, skip_bonus: false },
            start_mode: true,
        },
        initial_player: 'black',
        black_player_id: 1,
        white_player_id: 2,
        players: {
            black: {
                id: 1,
                username: 'testbot',
                rank: 10,
                professional: false,
            },
            white: {
                id: 2,
                username: 'human',
                rank: 10,
                professional: false,
            },
        },
        moves: [],
        meta_groups: [],
        history: [],
        initial_state: { black: '', white: '' },
        pause_on_weekends: false,
        disable_analysis: false,
        allow_self_capture: false,
        automatic_stone_removal: false,
        free_handicap_placement: true,
        aga_handicap_scoring: false,
        allow_ko: false,
        allow_superko: false,
        superko_algorithm: 'ssk',
        score_territory: true,
        score_territory_in_seki: true,
        score_stones: true,
        score_handicap: true,
        score_prisoners: false,
        score_passes: true,
        white_must_pass_last: false,
        opponent_plays_first_after_resume: false,
        strict_seki_mode: false,
        original_disable_analysis: false,
    };
    return Object.assign({}, base, overrides);
}

exports.base_gamedata = base_gamedata;
